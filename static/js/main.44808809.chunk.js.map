{"version":3,"sources":["store/types.ts","store/useTypedSelector.ts","store/usersSelectors.ts","api/axiosInstance.ts","api/usersApi.ts","store/usersSlice.ts","Components/Table/TableHead.tsx","Components/Table/TableRow.tsx","Components/Table/Table.tsx","Components/Paginator/Paginator.tsx","Components/UsersFilters/UsersFilters.tsx","Components/Profile/Profile.tsx","App.tsx","store/store.ts","index.tsx"],"names":["FetchStatuses","SortTypes","useTypedSelector","useSelector","selectUsers","state","page","users","perPage","start","end","filter","user","show","slice","selectUsersStatuses","usersStatus","selectPaginationOptions","totalItems","selectSortOptions","sort","selectStates","states","axiosInstance","axios","create","baseURL","usersApi","get","getUsers","createAsyncThunk","a","res","data","initialState","IDLE","name","BY_ID","reversed","sorted","displayName","BY_FIRST_NAME","BY_LAST_NAME","BY_EMAIL","BY_PHONE","BY_STATE","error","usersSlice","createSlice","reducers","pageChanged","action","payload","usersSorted","option","find","forEach","b","userA","adress","toUpperCase","userB","id","reverse","usersFiltered","count","firstName","indexOf","includes","Number","extraReducers","pending","toString","LOADING","fulfilled","SUCCESS","length","push","rejected","ERROR","message","usersReducer","reducer","actions","TableHead","props","onSort","options","className","map","onClick","TableRow","even","setProfile","lastName","email","phone","Table","i","Paginator","onChange","pagesCount","buttons","unshift","UsersFilters","useState","inputValue","setInputValue","dispatch","useDispatch","selected","setSelected","value","label","console","log","useEffect","e","target","placeholder","isMulti","newSelect","Profile","profile","description","streetAddress","city","zip","App","handlerChangePage","useCallback","handleSortBy","sortOption","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAsCYA,EAOAC,E,sDC1CCC,EAAoDC,ICDpDC,EAAc,SAACC,GAAsB,IAAD,EACzCC,EAAOD,EAAME,MAAMD,KACnBE,EAAUH,EAAME,MAAMC,QACtBC,EAAQH,EAAOE,EAAUA,EACzBE,EAAMD,EAAQD,EACdD,EAAK,UAAGF,EAAME,MAAMA,aAAf,aAAG,EAAmBI,QAAO,SAACC,GAAD,OAAUA,EAAKC,QACvD,cAAON,QAAP,IAAOA,OAAP,EAAOA,EAAOO,MAAML,EAAOC,IAGhBK,EAAsB,SAACV,GAAD,MAAuB,CACxDW,YAAaX,EAAME,MAAMS,cAGdC,EAA0B,SAACZ,GAAD,MAAuB,CAC5DC,KAAMD,EAAME,MAAMD,KAClBE,QAASH,EAAME,MAAMC,QACrBU,WAAYb,EAAME,MAAMW,aAGbC,EAAoB,SAACd,GAAD,OAAsBA,EAAME,MAAMa,MAEtDC,EAAe,SAAChB,GAAD,OAAsBA,EAAME,MAAMe,Q,2CFelDtB,K,YAAAA,E,kBAAAA,E,kBAAAA,E,eAAAA,M,cAOAC,K,WAAAA,E,0BAAAA,E,wBAAAA,E,iBAAAA,E,iBAAAA,E,kBAAAA,M,mBG3CCsB,E,OAAgBC,EAAMC,OAAO,CACxCC,QAAS,iECAEC,EAAW,WAEpB,OAAOJ,EAAcK,IAAI,wB,QCDhBC,EAAWC,YAAiB,iBAAD,sBAAmB,4BAAAC,EAAA,sEACvCJ,IADuC,cACnDK,EADmD,yBAElDA,EAAIC,MAF8C,4CAKrDC,EAAkC,CACtClB,YAAahB,EAAcmC,KAC3Bb,OAAQ,GACRF,KAAM,CACJ,CACEgB,KAAMnC,EAAUoC,MAChBC,UAAU,EACVC,QAAQ,EACRC,YAAa,MAEf,CACEJ,KAAMnC,EAAUwC,cAChBH,UAAU,EACVC,QAAQ,EACRC,YAAa,cAEf,CACEJ,KAAMnC,EAAUyC,aAChBJ,UAAU,EACVC,QAAQ,EACRC,YAAa,aAGf,CACEJ,KAAMnC,EAAU0C,SAChBL,UAAU,EACVC,QAAQ,EACRC,YAAa,SAEf,CACEJ,KAAMnC,EAAU2C,SAChBN,UAAU,EACVC,QAAQ,EACRC,YAAa,SAEf,CACEJ,KAAMnC,EAAU4C,SAChBP,UAAU,EACVC,QAAQ,EACRC,YAAa,UAGjBlC,KAAM,EACNE,QAAS,GACTU,WAAY,EACZX,MAAO,KACPuC,MAAO,IAGHC,EAAaC,YAAY,CAC7BZ,KAAM,QACNF,eACAe,SAAU,CACRC,YADQ,SACI7C,EAAO8C,GACjB9C,EAAMC,KAAO6C,EAAOC,SAEtBC,YAJQ,SAIIhD,EAAO8C,GACjB,IAAMG,EAASjD,EAAMe,KAAKmC,MACxB,SAACD,GAAD,OAAYA,EAAOlB,OAASe,EAAOC,WAErCE,EAAQf,QAAS,EACjBe,EAAQhB,UAAYgB,EAAQhB,SAC5BjC,EAAMe,KAAKoC,SAAQ,SAACF,GAMyB,IAAD,EAoBrB,EArBrB,GAJIA,EAAOlB,OAASe,EAAOC,UACzBE,EAAOf,QAAS,EAChBe,EAAOhB,UAAW,GAEhBgB,EAAOf,OACT,GAAIe,EAAOlB,OAASnC,EAAU4C,SAC5B,UAAAxC,EAAME,aAAN,SAAaa,MAAK,SAACW,EAAG0B,GACpB,IAAMC,EAAQ3B,EAAE4B,OAAOtD,MAAMuD,cACvBC,EAAQJ,EAAEE,OAAOtD,MAAMuD,cAC7B,OAAIF,EAAQG,GAAe,EACvBH,EAAQG,EAAc,EACnB,UAEJ,GAAIP,EAAOlB,OAASnC,EAAUoC,MAAO,CAAC,IAAD,EAC1C,UAAAhC,EAAME,aAAN,SAAaa,MAAK,SAACW,EAAG0B,GAAJ,OAAUA,EAAEK,GAAK/B,EAAE+B,UAChC,CAAC,IAAD,EACL,UAAAzD,EAAME,aAAN,SAAaa,MAAK,SAACW,EAAG0B,GACpB,IAAMC,EAAQ3B,EAAEuB,EAAOlB,MAAMwB,cACvBC,EAAQJ,EAAEH,EAAOlB,MAAMwB,cAC7B,OAAIF,EAAQG,GAAe,EACvBH,EAAQG,EAAc,EACnB,KAITP,EAAOhB,WACT,UAAAjC,EAAME,aAAN,SAAawD,eAInBC,cAzCQ,SAyCM3D,EAAO8C,GAAS,IAAD,IACvBc,EAAQ,EACZ,UAAA5D,EAAME,aAAN,SAAaiD,SAAQ,SAAC5C,IAGqC,IAF5CA,EAAKsD,UAAUN,cAEnBO,QAAQhB,EAAOC,QAAQhB,KAAKwB,gBACnCT,EAAOC,QAAQ9B,OAAO8C,SAASxD,EAAK+C,OAAOtD,QAE3CO,EAAKC,MAAO,EACZoD,KAEArD,EAAKC,MAAO,KAGhB,UAAAR,EAAME,aAAN,SAAaa,MAAK,SAACW,EAAG0B,GAAJ,OAAUY,OAAOZ,EAAE5C,MAAQwD,OAAOtC,EAAElB,SACtDR,EAAMa,WAAa+C,IAGvBK,eAAa,mBACVzC,EAAS0C,QAAQC,YAAa,SAACnE,EAAO8C,GACrC9C,EAAMW,YAAchB,EAAcyE,WAFzB,cAIV5C,EAAS6C,UAAUF,YAAa,SAACnE,EAAO8C,GAAY,IAAD,EAClD9C,EAAMW,YAAchB,EAAc2E,QAClCtE,EAAMa,WAAaiC,EAAOC,QAAQwB,OAClCvE,EAAME,MAAQ4C,EAAOC,QACrB,UAAA/C,EAAME,aAAN,SAAaiD,SAAQ,SAAC5C,GACpBA,EAAKC,MAAO,EACPR,EAAMiB,OAAO8C,SAASxD,EAAK+C,OAAOtD,QACrCA,EAAMiB,OAAOuD,KAAKjE,EAAK+C,OAAOtD,aAXzB,cAeVwB,EAASiD,SAASN,YAAa,SAACnE,EAAO8C,GACtC9C,EAAMW,YAAchB,EAAc+E,MAClC1E,EAAMyC,MAAQK,EAAOL,MAAMkC,WAjBlB,KAsBFC,EAAelC,EAAWmC,QAEhC,EAAoDnC,EAAWoC,QAAvDjC,EAAR,EAAQA,YAAaG,EAArB,EAAqBA,YAAaW,EAAlC,EAAkCA,c,OCvI5BoB,EAAY,SAACC,GACxB,IAAQC,EAAWD,EAAXC,OACFC,EAAUrF,EAAiBiB,GAEjC,OACE,qBAAKqE,UAAW,sBAAhB,SACGD,EAAQE,KAAI,SAACnC,GAAD,OACX,sBAEEoC,QAAS,kBAAMJ,EAAOhC,EAAOlB,OAC7BoD,UAAS,yCACPlC,EAAOlB,OAASnC,EAAU0C,UAAY,qBAJ1C,UAOGW,EAAOd,YAAa,IACpBc,EAAOf,OAAUe,EAAOhB,SAAW,SAAM,SAAO,WAP5CgB,EAAOlB,YCTTuD,G,MAAW,SAACN,GACvB,IAAQzE,EAA2ByE,EAA3BzE,KAAMgF,EAAqBP,EAArBO,KAAMC,EAAeR,EAAfQ,WAEpB,OACE,sBACEL,UAAS,qBAAgBI,GAAQ,mBACjCF,QAAS,kBAAMG,EAAWjF,IAF5B,UAIE,qBAAK4E,UAAW,cAAhB,SAAgC5E,EAAKkD,KACrC,qBAAK0B,UAAW,cAAhB,SAAgC5E,EAAKsD,YACrC,qBAAKsB,UAAW,cAAhB,SAAgC5E,EAAKkF,WACrC,qBAAKN,UAAW,gCAAhB,SAAkD5E,EAAKmF,QACvD,qBAAKP,UAAW,cAAhB,SAAgC5E,EAAKoF,QACrC,qBAAKR,UAAW,cAAhB,SAAgC5E,EAAK+C,OAAOtD,aCVrC4F,EAAQ,SAACZ,GACpB,IAAQ9E,EAA8B8E,EAA9B9E,MAAO+E,EAAuBD,EAAvBC,OAAQO,EAAeR,EAAfQ,WACvB,OACE,sBAAKL,UAAW,iBAAhB,UACE,cAAC,EAAD,CAAWF,OAAQA,IAClB/E,EAAMkF,KACL,SAAC7E,EAAMsF,GAAP,OACEtF,EAAKC,MACH,cAAC,EAAD,CAEED,KAAMA,EACNgF,KAAMM,EAAI,IAAM,EAChBL,WAAYA,GAHPjF,EAAKmF,cCXXI,G,MAAY,SAACd,GAIxB,IAHA,IAAQ/E,EAAwC+E,EAAxC/E,KAAME,EAAkC6E,EAAlC7E,QAASU,EAAyBmE,EAAzBnE,WAAYkF,EAAaf,EAAbe,SAC7BC,EAAanF,EAAaV,EAC1B8F,EAAU,GAHyB,WAIhCJ,GACPI,EAAQzB,KACN,qBAEEa,QAAS,kBAAMU,EAASF,IACxBV,UAAS,8BAAyBU,IAAM5F,GAAQ,qBAHlD,SAKG4F,GAJIA,KAHFA,EAAI,EAAGA,GAAKG,EAAYH,IAAM,EAA9BA,GAiCT,OAtBI5F,EAAO,GACTgG,EAAQC,QACN,qBAEEb,QAAS,kBAAMU,EAAS9F,EAAO,IAC/BkF,UAAS,wDAHX,oBACO,IAQPlF,EAAO+F,GACTC,EAAQzB,KACN,qBAEEa,QAAS,kBAAMU,EAAS9F,EAAO,IAC/BkF,UAAS,wDAHX,iBACOa,EAAa,IAStB,qBAAKb,UAAW,qBAAhB,SACE,qBAAKA,UAAW,uBAAhB,SAAyCc,Q,QCxClCE,G,MAAe,WAC1B,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAWC,cACXvF,EAASpB,EAAiBmB,GAChC,EAAgCoF,mBAASnF,GAAzC,mBAAOwF,EAAP,KAAiBC,EAAjB,KACMxB,EAAUjE,EAAOmE,KAAI,SAACpF,GAAD,MAAY,CAAE2G,MAAO3G,EAAO4G,MAAO5G,MAmB9D,OALA6G,QAAQC,IAAI7F,GACZ8F,qBAAU,WACRR,EAAS5C,EAAc,CAAE5B,KAAMsE,EAAYpF,OAAQwF,OAClD,CAACJ,EAAYI,IAGd,sBAAKtB,UAAW,mBAAhB,UACE,uBACEwB,MAAON,EACPN,SArBmB,SAACiB,GACxBV,EAAcU,EAAEC,OAAON,QAqBnBO,YAAa,iBAEf,cAAC,IAAD,CACEA,YAAa,kBACb/B,UAAW,oBACXD,QAASA,EACTiC,SAAO,EACPpB,SA1BqB,SAACiB,GAE1B,GADAH,QAAQC,IAAIE,EAAEzC,QACG,IAAbyC,EAAEzC,OACJmC,EAAYzF,OACP,CACL,IAAMmG,EAAYJ,EAAE5B,KAAI,SAACpF,GAAD,OAAgBA,EAAM2G,SAC9CD,EAAYU,YCjBLC,G,MAAU,SAACrC,GACtB,IAAQsC,EAAYtC,EAAZsC,QACR,OACE,sBAAKnC,UAAW,mBAAhB,UACE,2CACYmC,EAAQzD,UADpB,IACgCyD,EAAQ7B,YAExC,+CAAkB6B,EAAQC,eAC1B,0CAAaD,EAAQhE,OAAOkE,iBAC5B,wCAAWF,EAAQhE,OAAOmE,QAC1B,yCAAYH,EAAQhE,OAAOtD,SAC3B,yCAAYsH,EAAQhE,OAAOoE,YCHpBC,EAAM,WACjB,IAAMpB,EAAWC,cACXtG,EAAQL,EAAiBE,GAC/B,EAA8BqG,mBAASlG,EAAQA,EAAM,GAAK,MAA1D,mBAAOoH,EAAP,KAAgB9B,EAAhB,KACQ7E,EAAgBd,EAAiBa,GAAjCC,YACR,EAAsCd,EACpCe,GADMX,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASU,EAAvB,EAAuBA,WAIvBkG,qBAAU,WACRR,EAAS/E,OACR,CAAC+E,IAEJ,IAAMqB,EAAoBC,uBAAY,SAAC5H,GACrCsG,EAAS1D,EAAY5C,MACpB,IAEG6H,EAAeD,uBAAY,SAACE,GAChCxB,EAASvD,EAAY+E,MACpB,IAEH,OAAIpH,IAAgBhB,EAAcyE,QACzB,6CAGP,sBAAKe,UAAU,MAAf,UACE,cAAC,EAAD,IACCjF,GACC,cAAC,EAAD,CAAOA,MAAOA,EAAO+E,OAAQ6C,EAActC,WAAYA,IAEzD,cAAC,EAAD,CACE3E,WAAYA,EACZV,QAASA,EACTF,KAAMA,EACN8F,SAAU6B,IAEXN,GAAW,cAAC,EAAD,CAASA,QAASA,QChDvBU,EAAQC,YAAe,CAClCpD,QAAS,CACP3E,MAAO0E,KCEXsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.44808809.chunk.js","sourcesContent":["interface S {\n  [key: string]: any;\n}\n\nexport interface User extends S {\n  id: number;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  adress: {\n    streetAddress: string;\n    city: string;\n    state: string;\n    zip: string;\n  };\n  description: string;\n  show: boolean;\n}\n\nexport type UsersInitialState = {\n  usersStatus: FetchStatuses;\n  page: number;\n  perPage: number;\n  sort: SortOption[];\n  totalItems: number;\n  users: User[] | null;\n  error: string;\n  states: string[];\n};\n\ntype SortOption = {\n  name: SortTypes;\n  reversed: boolean;\n  sorted: boolean;\n  displayName: string;\n};\n\nexport enum FetchStatuses {\n  IDLE = 'IDLE',\n  LOADING = 'LOADING',\n  SUCCESS = 'SUCCESS',\n  ERROR = 'ERROR',\n}\n\nexport enum SortTypes {\n  BY_ID = 'id',\n  BY_FIRST_NAME = 'firstName',\n  BY_LAST_NAME = 'lastName',\n  BY_EMAIL = 'email',\n  BY_PHONE = 'phone',\n  BY_STATE = 'state',\n}\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '../store/store';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { RootState } from './store';\n\nexport const selectUsers = (state: RootState) => {\n  const page = state.users.page;\n  const perPage = state.users.perPage;\n  const start = page * perPage - perPage;\n  const end = start + perPage;\n  const users = state.users.users?.filter((user) => user.show);\n  return users?.slice(start, end);\n};\n\nexport const selectUsersStatuses = (state: RootState) => ({\n  usersStatus: state.users.usersStatus,\n});\n\nexport const selectPaginationOptions = (state: RootState) => ({\n  page: state.users.page,\n  perPage: state.users.perPage,\n  totalItems: state.users.totalItems,\n});\n\nexport const selectSortOptions = (state: RootState) => state.users.sort;\n\nexport const selectStates = (state: RootState) => state.users.states;\n","import axios from 'axios';\n\nexport const axiosInstance = axios.create({\n  baseURL: 'https://itrex-react-lab-files.s3.eu-central-1.amazonaws.com/',\n});\n","import { axiosInstance } from './axiosInstance';\nimport { User } from '../store/types';\n\nexport const usersApi = {\n  getUsers(): Promise<{ data: User[] }> {\n    return axiosInstance.get('react-test-api.json');\n  },\n};\n","import { FetchStatuses, User, UsersInitialState, SortTypes } from './types';\nimport { usersApi } from './../api/usersApi';\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const getUsers = createAsyncThunk('users/getUsers', async () => {\n  const res = await usersApi.getUsers();\n  return res.data;\n});\n\nconst initialState: UsersInitialState = {\n  usersStatus: FetchStatuses.IDLE,\n  states: [],\n  sort: [\n    {\n      name: SortTypes.BY_ID,\n      reversed: false,\n      sorted: false,\n      displayName: 'id',\n    },\n    {\n      name: SortTypes.BY_FIRST_NAME,\n      reversed: false,\n      sorted: false,\n      displayName: 'First name',\n    },\n    {\n      name: SortTypes.BY_LAST_NAME,\n      reversed: false,\n      sorted: false,\n      displayName: 'Last name',\n    },\n\n    {\n      name: SortTypes.BY_EMAIL,\n      reversed: false,\n      sorted: false,\n      displayName: 'Email',\n    },\n    {\n      name: SortTypes.BY_PHONE,\n      reversed: false,\n      sorted: false,\n      displayName: 'Phone',\n    },\n    {\n      name: SortTypes.BY_STATE,\n      reversed: false,\n      sorted: false,\n      displayName: 'State',\n    },\n  ],\n  page: 1,\n  perPage: 20,\n  totalItems: 0,\n  users: null,\n  error: '',\n};\n\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    pageChanged(state, action) {\n      state.page = action.payload;\n    },\n    usersSorted(state, action) {\n      const option = state.sort.find(\n        (option) => option.name === action.payload,\n      );\n      option!.sorted = true;\n      option!.reversed = !option!.reversed;\n      state.sort.forEach((option) => {\n        if (option.name !== action.payload) {\n          option.sorted = false;\n          option.reversed = false;\n        }\n        if (option.sorted) {\n          if (option.name === SortTypes.BY_STATE) {\n            state.users?.sort((a, b) => {\n              const userA = a.adress.state.toUpperCase();\n              const userB = b.adress.state.toUpperCase();\n              if (userA > userB) return -1;\n              if (userA < userB) return 1;\n              return 0;\n            });\n          } else if (option.name === SortTypes.BY_ID) {\n            state.users?.sort((a, b) => b.id - a.id);\n          } else {\n            state.users?.sort((a, b) => {\n              const userA = a[option.name].toUpperCase();\n              const userB = b[option.name].toUpperCase();\n              if (userA > userB) return -1;\n              if (userA < userB) return 1;\n              return 0;\n            });\n          }\n        }\n        if (option.reversed) {\n          state.users?.reverse();\n        }\n      });\n    },\n    usersFiltered(state, action) {\n      let count = 0;\n      state.users?.forEach((user) => {\n        const name = user.firstName.toUpperCase();\n        if (\n          !(name.indexOf(action.payload.name.toUpperCase()) === -1) &&\n          action.payload.states.includes(user.adress.state)\n        ) {\n          user.show = true;\n          count++;\n        } else {\n          user.show = false;\n        }\n      });\n      state.users?.sort((a, b) => Number(b.show) - Number(a.show));\n      state.totalItems = count;\n    },\n  },\n  extraReducers: {\n    [getUsers.pending.toString()]: (state, action) => {\n      state.usersStatus = FetchStatuses.LOADING;\n    },\n    [getUsers.fulfilled.toString()]: (state, action) => {\n      state.usersStatus = FetchStatuses.SUCCESS;\n      state.totalItems = action.payload.length;\n      state.users = action.payload;\n      state.users?.forEach((user) => {\n        user.show = true;\n        if (!state.states.includes(user.adress.state)) {\n          state.states.push(user.adress.state);\n        }\n      });\n    },\n    [getUsers.rejected.toString()]: (state, action) => {\n      state.usersStatus = FetchStatuses.ERROR;\n      state.error = action.error.message;\n    },\n  },\n});\n\nexport const usersReducer = usersSlice.reducer;\n\nexport const { pageChanged, usersSorted, usersFiltered } = usersSlice.actions;\n","import { useState } from 'react';\nimport { SortTypes } from '../../store/types';\nimport { useTypedSelector } from '../../store/useTypedSelector';\nimport { selectSortOptions } from '../../store/usersSelectors';\n\ntype Props = {\n  onSort: (sortOption: SortTypes) => void;\n};\n\nexport const TableHead = (props: Props) => {\n  const { onSort } = props;\n  const options = useTypedSelector(selectSortOptions);\n\n  return (\n    <div className={'table__head-wrapper'}>\n      {options.map((option) => (\n        <div\n          key={option.name}\n          onClick={() => onSort(option.name)}\n          className={`table__cell table__cell-header ${\n            option.name === SortTypes.BY_EMAIL && 'table__cell-email'\n          }`}\n        >\n          {option.displayName}{' '}\n          {option.sorted ? (option.reversed ? '↓' : '↑') : '⇾'}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import { User } from '../../store/types';\n\ntype Props = {\n  user: User;\n  even: boolean;\n  setProfile: any;\n};\n\nexport const TableRow = (props: Props) => {\n  const { user, even, setProfile } = props;\n\n  return (\n    <div\n      className={`table__row ${even && 'table__row-dark'}`}\n      onClick={() => setProfile(user)}\n    >\n      <div className={'table__cell'}>{user.id}</div>\n      <div className={'table__cell'}>{user.firstName}</div>\n      <div className={'table__cell'}>{user.lastName}</div>\n      <div className={'table__cell table__cell-email'}>{user.email}</div>\n      <div className={'table__cell'}>{user.phone}</div>\n      <div className={'table__cell'}>{user.adress.state}</div>\n    </div>\n  );\n};\n","import { SortTypes, User } from '../../store/types';\nimport { TableHead } from './TableHead';\nimport './table.css';\nimport { TableRow } from './TableRow';\n\ntype Props = {\n  users: User[];\n  onSort: (sortOption: SortTypes) => void;\n  setProfile: any;\n};\n\nexport const Table = (props: Props) => {\n  const { users, onSort, setProfile } = props;\n  return (\n    <div className={'table__wrapper'}>\n      <TableHead onSort={onSort} />\n      {users.map(\n        (user, i) =>\n          user.show && (\n            <TableRow\n              key={user.email}\n              user={user}\n              even={i % 2 !== 0}\n              setProfile={setProfile}\n            />\n          ),\n      )}\n    </div>\n  );\n};\n","import './paginator.css';\n\ntype Props = {\n  page: number;\n  perPage: number;\n  totalItems: number;\n  onChange: (page: number) => void;\n};\n\nexport const Paginator = (props: Props) => {\n  const { page, perPage, totalItems, onChange } = props;\n  const pagesCount = totalItems / perPage;\n  const buttons = [];\n  for (let i = 1; i <= pagesCount; i++) {\n    buttons.push(\n      <div\n        key={i}\n        onClick={() => onChange(i)}\n        className={`paginator__page-btn ${i === page && 'paginator__active'}`}\n      >\n        {i}\n      </div>,\n    );\n  }\n  if (page > 1) {\n    buttons.unshift(\n      <div\n        key={0}\n        onClick={() => onChange(page - 1)}\n        className={`paginator__page-btn paginator__active paginator__next`}\n      >\n        Previos\n      </div>,\n    );\n  }\n  if (page < pagesCount) {\n    buttons.push(\n      <div\n        key={pagesCount + 1}\n        onClick={() => onChange(page + 1)}\n        className={`paginator__page-btn paginator__active paginator__next`}\n      >\n        Next\n      </div>,\n    );\n  }\n  return (\n    <div className={'paginator__wrapper'}>\n      <div className={'paginator__container'}>{buttons}</div>\n    </div>\n  );\n};\n","import { ChangeEvent, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { usersFiltered } from '../../store/usersSlice';\nimport Select from 'react-select';\nimport './filters.css';\nimport { useTypedSelector } from '../../store/useTypedSelector';\nimport { selectStates } from '../../store/usersSelectors';\n\nexport const UsersFilters = () => {\n  const [inputValue, setInputValue] = useState('');\n  const dispatch = useDispatch();\n  const states = useTypedSelector(selectStates);\n  const [selected, setSelected] = useState(states);\n  const options = states.map((state) => ({ value: state, label: state }));\n\n  const handleChangeName = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n  const handleChangeStates = (e: any) => {\n    console.log(e.length);\n    if (e.length === 0) {\n      setSelected(states);\n    } else {\n      const newSelect = e.map((state: any) => state.value);\n      setSelected(newSelect);\n    }\n  };\n  console.log(states);\n  useEffect(() => {\n    dispatch(usersFiltered({ name: inputValue, states: selected }));\n  }, [inputValue, selected]);\n\n  return (\n    <div className={'filters__wrapper'}>\n      <input\n        value={inputValue}\n        onChange={handleChangeName}\n        placeholder={'Find by name'}\n      />\n      <Select\n        placeholder={'Filter by state'}\n        className={'filters__selector'}\n        options={options}\n        isMulti\n        onChange={handleChangeStates}\n      />\n    </div>\n  );\n};\n","import { User } from '../../store/types';\nimport './profile.css';\n\ntype Props = {\n  profile: User;\n};\n\nexport const Profile = (props: Props) => {\n  const { profile } = props;\n  return (\n    <div className={'profile__wrapper'}>\n      <h1>\n        Profile: {profile.firstName} {profile.lastName}\n      </h1>\n      <h1>Description: {profile.description}</h1>\n      <h1>Adress: {profile.adress.streetAddress}</h1>\n      <h1>City: {profile.adress.city}</h1>\n      <h1>State: {profile.adress.state}</h1>\n      <h1>Index: {profile.adress.zip}</h1>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useTypedSelector } from './store/useTypedSelector';\nimport {\n  selectUsers,\n  selectUsersStatuses,\n  selectPaginationOptions,\n} from './store/usersSelectors';\nimport { useDispatch } from 'react-redux';\nimport { getUsers, pageChanged, usersSorted } from './store/usersSlice';\nimport { Table } from './Components/Table/Table';\nimport { FetchStatuses } from './store/types';\nimport { Paginator } from './Components/Paginator/Paginator';\nimport { UsersFilters } from './Components/UsersFilters/UsersFilters';\nimport { Profile } from './Components/Profile/Profile';\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const users = useTypedSelector(selectUsers);\n  const [profile, setProfile] = useState(users ? users[0] : null);\n  const { usersStatus } = useTypedSelector(selectUsersStatuses);\n  const { page, perPage, totalItems } = useTypedSelector(\n    selectPaginationOptions,\n  );\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [dispatch]);\n\n  const handlerChangePage = useCallback((page: number) => {\n    dispatch(pageChanged(page));\n  }, []);\n\n  const handleSortBy = useCallback((sortOption) => {\n    dispatch(usersSorted(sortOption));\n  }, []);\n\n  if (usersStatus === FetchStatuses.LOADING) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div className=\"App\">\n      <UsersFilters />\n      {users && (\n        <Table users={users} onSort={handleSortBy} setProfile={setProfile} />\n      )}\n      <Paginator\n        totalItems={totalItems}\n        perPage={perPage}\n        page={page}\n        onChange={handlerChangePage}\n      />\n      {profile && <Profile profile={profile} />}\n    </div>\n  );\n};\n","import { configureStore } from '@reduxjs/toolkit';\nimport { usersReducer } from './usersSlice';\n\nexport const store = configureStore({\n  reducer: {\n    users: usersReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}